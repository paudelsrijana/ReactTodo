{"version":3,"sources":["TodoItem.js","App.js","index.js"],"names":["TodoItem","props","type","checked","completed","onChange","onTodoCompleted","editMode","value","todoText","onEditTodoChange","onBlur","onEditMode","className","onDoubleClick","onClick","onRemove","App","handleTodoInputChange","event","target","setState","todoInput","handleSubmit","preventDefault","alert","state","handleAddClick","e","todo","todosCloned","todos","slice","push","window","localStorage","setItem","JSON","stringify","handleSearchInputChange","searchInput","handleRemoveTodos","index","splice","handleClearAllClick","handleTodoCompleted","prevCompletedState","searchTodo","filter","toLowerCase","includes","handleEditMode","prevEditMode","handleEditTodoChange","getItem","parse","filtered","this","noTodo","length","onSubmit","id","placeholder","map","i","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73a61ff9.chunk.js","sourcesContent":["import React from \"react\";\r\nconst TodoItem = (props) => {\r\n  return (\r\n    <li>\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={props.completed}\r\n        onChange={props.onTodoCompleted}\r\n      />\r\n\r\n      {props.editMode ? (\r\n        <input\r\n          value={props.todoText}\r\n          onChange={props.onEditTodoChange}\r\n          onBlur={props.onEditMode}\r\n        />\r\n      ) : (\r\n        <span\r\n          className={props.completed ? \"todo-items\" : \"\"}\r\n          onDoubleClick={props.onEditMode}\r\n        >\r\n          {props.todoText}\r\n        </span>\r\n      )}\r\n      <button type=\"submit\" className=\" delete-todo\" onClick={props.onRemove}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\nexport default TodoItem;\r\n","import React, { Component } from \"react\";\nimport TodoItem from \"./TodoItem\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      todoInput: \"\",\n      searchInput: \"\",\n      todos: window.localStorage.getItem(\"items\")\n        ? JSON.parse(window.localStorage.getItem(\"items\"))\n        : [],\n    };\n  }\n\n  //get value given in input box named as enter your task to do\n  handleTodoInputChange = (event) => {\n    const value = event.target.value;\n    this.setState({\n      todoInput: value,\n    });\n  };\n  handleSubmit = (event) => {\n    event.preventDefault();\n    alert(`A todo was added: ${this.state.todoInput}`);\n    // Add the new todo to the list\n  };\n\n  //list the given task in ul after clicking add button\n  handleAddClick = (e) => {\n    e.preventDefault();\n    if (this.state.todoInput !== \"\") {\n      const todoInput = this.state.todoInput;\n      const todo = {\n        todoText: todoInput,\n        completed: false,\n        editMode: false,\n      };\n      const todosCloned = this.state.todos.slice();\n      todosCloned.push(todo);\n      window.localStorage.setItem(\"items\", JSON.stringify(todosCloned));\n      this.setState({\n        todos: todosCloned,\n        todoInput: \"\",\n      });\n    }\n  };\n  handleSearchInputChange = (event) => {\n    const value = event.target.value;\n    this.setState({\n      searchInput: value,\n    });\n  };\n  //remove todo\n  handleRemoveTodos = (index) => {\n    const todosCloned = this.state.todos.slice();\n    todosCloned.splice(index, 1);\n    this.setState({\n      todos: todosCloned,\n    });\n    window.localStorage.setItem(\"items\", JSON.stringify(todosCloned));\n  };\n\n  //clear all todo item while clicking clear all button\n  handleClearAllClick = () => {\n    this.setState({\n      todos: [\n        /**\n         * {\n         *   todoText: \"Write a poem\",\n         *   completed: false,\n         *   editMode: false\n         * }\n         */\n      ],\n    });\n    window.localStorage.setItem(\"items\", JSON.stringify([]));\n  };\n\n  handleTodoCompleted = (index) => {\n    const todosCloned = this.state.todos.slice();\n    const prevCompletedState = todosCloned[index].completed;\n    todosCloned[index].completed = !prevCompletedState;\n    this.setState({\n      todos: todosCloned,\n    });\n  };\n  //search tasks\n  searchTodo = () => {\n    return this.state.todos.filter((todo) => {\n      return todo.todoText\n        .toLowerCase()\n        .includes(this.state.searchInput.toLowerCase());\n    });\n  };\n  handleEditMode = (index) => {\n    const todosCloned = this.state.todos.slice();\n    const prevEditMode = todosCloned[index].editMode;\n    todosCloned[index].editMode = !prevEditMode;\n\n    this.setState({\n      todos: todosCloned,\n    });\n  };\n\n  handleEditTodoChange = (event, index) => {\n    const todosCloned = this.state.todos.slice();\n    const value = event.target.value;\n    todosCloned[index].todoText = value;\n    this.setState({\n      todos: todosCloned,\n    });\n  };\n  render() {\n    const filtered = this.searchTodo();\n    const noTodo = this.state.todos.length === 0;\n    return (\n      <div className=\"todo-container\">\n        <h2>My Todo App</h2>\n        <div className=\"container-content\">\n          <div className=\"input-container\">\n            <form onSubmit=\"listen\">\n              <input\n                type=\"todo-text\"\n                id=\"myTask\"\n                placeholder=\"Enter your task to do....\"\n                onChange={this.handleTodoInputChange}\n                value={this.state.todoInput}\n              />\n              <button type=\"submit\" id=\"add-todo\" onClick={this.handleAddClick}>\n                Add Task\n              </button>\n              {noTodo ? null : <hr />}\n              {noTodo ? null : (\n                <input\n                  type=\"text\"\n                  className=\"form-control \"\n                  placeholder=\"Search your todos....\"\n                  id=\"searchInput\"\n                  onChange={this.handleSearchInputChange}\n                  value={this.state.searchInput}\n                />\n              )}\n              {noTodo ? null : (\n                <button\n                  type=\"submit\"\n                  id=\"clear-todo\"\n                  onClick={this.handleClearAllClick}\n                >\n                  Clear All\n                </button>\n              )}\n            </form>\n          </div>\n          <div>\n            <ul className=\"todo-lists\" id=\"todo-lists\">\n              {filtered.map((todo, i) => {\n                return (\n                  <TodoItem\n                    key={i}\n                    todoText={todo.todoText}\n                    completed={todo.completed}\n                    onTodoCompleted={() => {\n                      this.handleTodoCompleted(i);\n                    }}\n                    onRemove={() => {\n                      this.handleRemoveTodos(i);\n                    }}\n                    editMode={todo.editMode}\n                    onEditMode={() => {\n                      this.handleEditMode(i);\n                    }}\n                    onEditTodoChange={(e) => {\n                      this.handleEditTodoChange(e, i);\n                    }}\n                  />\n                );\n              })}\n            </ul>\n            {/* <pre>\n              <code>{JSON.stringify(this.state, null, 2)}</code>\n            </pre> */}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}